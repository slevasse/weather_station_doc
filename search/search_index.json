{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the weather station project documentation Project goal The simplified goal of the project is to design and implement a weather monitoring system based on simple weather stations (nodes). The data collected by each node is sent to a server where it is stored for further processing. The server also host a simple website where the data can be accessed. The project aim at developing the node hardware and software, and the server software. The true goal is to have produced nodes that can opperate autonomously in the rought alpine climate present in my montains (cold temperature (-30 C), heavy snowfall and strong winds (> 200 kmph)). However, before to be able to produce such nodes I feel like it would be better to have something that can opperate in nice climate (inside a house or in a city). Thus I will first focus on building a \"conventional\" weather monitoring system that I will then improve up to the point where it can be used where I indtend to. This project will be combined with another project of mine, the production of a cheap ultrasonic anemometer. I like to fly and having a good idea of the wind is crutial. However, anemometer are expensive and not fit for use in winter. Ultrasonic ones are better for use in harsh environement but they are ridiculously expensive, even if their operation is relatively simple. I do not intend to make some fancy app, pretty HW and all that bullshit. Just to make something to collect and visualise data in a simple and effective way. Everything will be public and open and I will gladly accept help from whoever will want to contribute. All in all if I end up with a thermometer in my bedroom that I can check from my phone I will bbe happy. Project motivation The motivation for this project is that there is no cheap environemental sensor that could survive the harsh winter we have where I live. This type of weather station is typicaly only used by governemental organisation or research center and they are too expensive / too large to be wide spread. Moreover, the data from these is not openly availiable. Project Timeline 14/04/2020 - Official start of the project Project milestones Mark I (city system) Produce a first prototype of node and server (breadboard mess type of thing). Produce integrated node for city use (semi-integrated in a custom PCB type of thing). MkI of the system completed (node, server, website). Mark II (Improved for harsh winter climate) Create a autonomous power and life-support system for the node. Improved node HW / SW to work with new power and life-support. Node MkII completed (might also call it winter node) Survived one winter MkII of the system completed (node, server, website). Existing similar system Here is a totaly non exhaustive list of similar projects. All of them are intended for city usage. Citizen efforts Luftdaten (Very similar to what I try to do, exept I want a more modular system..) aircarto (Project seems frozen..) airboxlab For profit Air things HabitatMap openAQ","title":"Welcome"},{"location":"#welcome-to-the-weather-station-project-documentation","text":"","title":"Welcome to the weather station project documentation"},{"location":"#project-goal","text":"The simplified goal of the project is to design and implement a weather monitoring system based on simple weather stations (nodes). The data collected by each node is sent to a server where it is stored for further processing. The server also host a simple website where the data can be accessed. The project aim at developing the node hardware and software, and the server software. The true goal is to have produced nodes that can opperate autonomously in the rought alpine climate present in my montains (cold temperature (-30 C), heavy snowfall and strong winds (> 200 kmph)). However, before to be able to produce such nodes I feel like it would be better to have something that can opperate in nice climate (inside a house or in a city). Thus I will first focus on building a \"conventional\" weather monitoring system that I will then improve up to the point where it can be used where I indtend to. This project will be combined with another project of mine, the production of a cheap ultrasonic anemometer. I like to fly and having a good idea of the wind is crutial. However, anemometer are expensive and not fit for use in winter. Ultrasonic ones are better for use in harsh environement but they are ridiculously expensive, even if their operation is relatively simple. I do not intend to make some fancy app, pretty HW and all that bullshit. Just to make something to collect and visualise data in a simple and effective way. Everything will be public and open and I will gladly accept help from whoever will want to contribute. All in all if I end up with a thermometer in my bedroom that I can check from my phone I will bbe happy.","title":"Project goal"},{"location":"#project-motivation","text":"The motivation for this project is that there is no cheap environemental sensor that could survive the harsh winter we have where I live. This type of weather station is typicaly only used by governemental organisation or research center and they are too expensive / too large to be wide spread. Moreover, the data from these is not openly availiable.","title":"Project motivation"},{"location":"#project-timeline","text":"14/04/2020 - Official start of the project","title":"Project Timeline"},{"location":"#project-milestones","text":"","title":"Project milestones"},{"location":"#mark-i-city-system","text":"Produce a first prototype of node and server (breadboard mess type of thing). Produce integrated node for city use (semi-integrated in a custom PCB type of thing). MkI of the system completed (node, server, website).","title":"Mark I (city system)"},{"location":"#mark-ii-improved-for-harsh-winter-climate","text":"Create a autonomous power and life-support system for the node. Improved node HW / SW to work with new power and life-support. Node MkII completed (might also call it winter node) Survived one winter MkII of the system completed (node, server, website).","title":"Mark II (Improved for harsh winter climate)"},{"location":"#existing-similar-system","text":"Here is a totaly non exhaustive list of similar projects. All of them are intended for city usage.","title":"Existing similar system"},{"location":"#citizen-efforts","text":"Luftdaten (Very similar to what I try to do, exept I want a more modular system..) aircarto (Project seems frozen..) airboxlab","title":"Citizen efforts"},{"location":"#for-profit","text":"Air things HabitatMap openAQ","title":"For profit"},{"location":"docs-info/","text":"Docs information On this page some information is provided how to operate the docs. For complete information see: https://www.mkdocs.org/user-guide/writing-your-docs/ Tip It is possible to create pages and edit the configuration from GitLab directly BUT it is much more convenient to run it locally in case of problems. This can be done by cloning the repository: git clone https://gitlab.cern.ch/be-bi-bgi/bgi-documentation.git && cd bgi-documentation To run locally you need to install MkDocs and the theme. In case of problems check your Python version python --version . It has been tested and working on MacOS 10.15.1 using Python 3.7.4. pip install mkdocs mkdocs-material Now you can hopefully start MkDocs and see the website at http://127.0.0.1:8000/ using the command below (see https://www.mkdocs.org/#getting-started for more info). mkdocs serve As soon as you edit a page or the config file, the website will reload. If there are any errors it might not reload and you need to check the output in the terminal. When you are done, commit the changes and push to the repository ( Git instructions ) The public website will reload automatically after a minute or two. Creating new pages Creating a new page involves two steps. Create the .md file in the correct directory Update the mkdocs.yml file Directory Structure The directory structure should be kept the same as the structure of the website. | -electronics | ---detector | ---readout | -mechanics | -physics | -software | ---analysis | ---lab-debug | ---operational Example The important section of the mkdocs.yml file is under nav . Indentation level sets the structure of the pages. This should match the directory structure. A snippet of the file can be seen below: nav : - Home : - Welcome : index.md - Docs information : docs-info.md - Software : - Overview : software/overview.md - Lab & Debug : - Panda GUI : software/lab-debug/panda-gui.md Create a Markdown page from a Jupyter notebook This will include figures and tables from the compiled notebook. More info at: https://predictablynoisy.com/jekyll-markdown-nbconvert Snippet !jupyter nbconvert --to markdown --output-dir = 'OUTPUT_DIRECTORY' NAME_OF_THE_NOTEBOOK.ipynb Extending the default template See: https://nbconvert.readthedocs.io/en/latest/customizing.html#Custom-Templates","title":"Docs Information"},{"location":"docs-info/#docs-information","text":"On this page some information is provided how to operate the docs. For complete information see: https://www.mkdocs.org/user-guide/writing-your-docs/ Tip It is possible to create pages and edit the configuration from GitLab directly BUT it is much more convenient to run it locally in case of problems. This can be done by cloning the repository: git clone https://gitlab.cern.ch/be-bi-bgi/bgi-documentation.git && cd bgi-documentation To run locally you need to install MkDocs and the theme. In case of problems check your Python version python --version . It has been tested and working on MacOS 10.15.1 using Python 3.7.4. pip install mkdocs mkdocs-material Now you can hopefully start MkDocs and see the website at http://127.0.0.1:8000/ using the command below (see https://www.mkdocs.org/#getting-started for more info). mkdocs serve As soon as you edit a page or the config file, the website will reload. If there are any errors it might not reload and you need to check the output in the terminal. When you are done, commit the changes and push to the repository ( Git instructions ) The public website will reload automatically after a minute or two.","title":"Docs information"},{"location":"docs-info/#creating-new-pages","text":"Creating a new page involves two steps. Create the .md file in the correct directory Update the mkdocs.yml file Directory Structure The directory structure should be kept the same as the structure of the website. | -electronics | ---detector | ---readout | -mechanics | -physics | -software | ---analysis | ---lab-debug | ---operational Example The important section of the mkdocs.yml file is under nav . Indentation level sets the structure of the pages. This should match the directory structure. A snippet of the file can be seen below: nav : - Home : - Welcome : index.md - Docs information : docs-info.md - Software : - Overview : software/overview.md - Lab & Debug : - Panda GUI : software/lab-debug/panda-gui.md","title":"Creating new pages"},{"location":"docs-info/#create-a-markdown-page-from-a-jupyter-notebook","text":"This will include figures and tables from the compiled notebook. More info at: https://predictablynoisy.com/jekyll-markdown-nbconvert Snippet !jupyter nbconvert --to markdown --output-dir = 'OUTPUT_DIRECTORY' NAME_OF_THE_NOTEBOOK.ipynb","title":"Create a Markdown page from a Jupyter notebook"},{"location":"docs-info/#extending-the-default-template","text":"See: https://nbconvert.readthedocs.io/en/latest/customizing.html#Custom-Templates","title":"Extending the default template"},{"location":"example-markdown/","text":"Example Markdown This page shows some example markdown code Cheat sheet https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet Links External link example [LINK TEXT <i class= \"fa fa-external-link\" ></i> ](LINK-URL){target=\"\\_blank\"} LINK TEXT Images Image Example Inline - style : ! [ alt text ]( http : //via.placeholder.com/100x100 \"Title Text 1\") Reference - style : ! [ alt text ][ logo ] [ logo ] : http : //via.placeholder.com/100x100 \"Title Text 2\" Inline-style: Reference-style: Image with size constraint, e.g. 50% width ![ALT TEXT GOES HERE](http://via.placeholder.com/600x100){style=\"width:50%\"} Clickable image with figure text [![ALT TEXT GOES HERE](http://via.placeholder.com/600x100){style=\"width:50%\"}](http://via.placeholder.com/600x100) <p style= \"text-align: center;\" > **Figure N:** Centered figure text. </p> Figure N: Centered figure text. Admonition https://squidfunk.github.io/mkdocs-material/extensions/admonition/ !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. PyMdown https://squidfunk.github.io/mkdocs-material/extensions/pymdown/ Arithmatex Show LaTeX style math. Arithmatex Example $$ \\ frac { n ! }{ k ! ( n - k ) ! } = \\ binom { n }{ k } $$ Lorem ipsum dolor sit amet : $ p ( x | y ) = \\ frac { p ( y | x ) p ( x ) }{ p ( y ) }$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)} Mark Mark Example Used to ==highlight== text. Used to highlight text. Tasklist Tasklist Example * [ x ] Lorem ipsum dolor sit amet , consectetur adipiscing elit * [ ] Vestibulum convallis sit amet nisi a tincidunt * [ x ] Sed egestas felis quis elit dapibus , ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Nulla vel eros venenatis , imperdiet enim id , faucibus nisi Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Nulla vel eros venenatis, imperdiet enim id, faucibus nisi ProgressBar Progress Bar Example [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"] 0% 5% 25% 45% 65% 85% 100% Font Awesome http://bwmarrin.github.io/MkDocsPlus/fontawesome/ https://astronautweb.co/snippet/font-awesome/ fa-lg fa-2x fa-3x fa-4x fa-5x","title":"Example Markdown"},{"location":"example-markdown/#example-markdown","text":"This page shows some example markdown code","title":"Example Markdown"},{"location":"example-markdown/#cheat-sheet","text":"https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet","title":"Cheat sheet"},{"location":"example-markdown/#links","text":"External link example [LINK TEXT <i class= \"fa fa-external-link\" ></i> ](LINK-URL){target=\"\\_blank\"} LINK TEXT","title":"Links"},{"location":"example-markdown/#images","text":"Image Example Inline - style : ! [ alt text ]( http : //via.placeholder.com/100x100 \"Title Text 1\") Reference - style : ! [ alt text ][ logo ] [ logo ] : http : //via.placeholder.com/100x100 \"Title Text 2\" Inline-style: Reference-style: Image with size constraint, e.g. 50% width ![ALT TEXT GOES HERE](http://via.placeholder.com/600x100){style=\"width:50%\"} Clickable image with figure text [![ALT TEXT GOES HERE](http://via.placeholder.com/600x100){style=\"width:50%\"}](http://via.placeholder.com/600x100) <p style= \"text-align: center;\" > **Figure N:** Centered figure text. </p> Figure N: Centered figure text.","title":"Images"},{"location":"example-markdown/#admonition","text":"https://squidfunk.github.io/mkdocs-material/extensions/admonition/ !!! note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. !!! danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Note Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Abstract Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Question Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Tip Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Example Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Success Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Info Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Warning Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod. Danger Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod.","title":"Admonition"},{"location":"example-markdown/#pymdown","text":"https://squidfunk.github.io/mkdocs-material/extensions/pymdown/","title":"PyMdown"},{"location":"example-markdown/#arithmatex","text":"Show LaTeX style math. Arithmatex Example $$ \\ frac { n ! }{ k ! ( n - k ) ! } = \\ binom { n }{ k } $$ Lorem ipsum dolor sit amet : $ p ( x | y ) = \\ frac { p ( y | x ) p ( x ) }{ p ( y ) }$ \\frac{n!}{k!(n-k)!} = \\binom{n}{k} \\frac{n!}{k!(n-k)!} = \\binom{n}{k} Lorem ipsum dolor sit amet: p(x|y) = \\frac{p(y|x)p(x)}{p(y)} p(x|y) = \\frac{p(y|x)p(x)}{p(y)}","title":"Arithmatex"},{"location":"example-markdown/#mark","text":"Mark Example Used to ==highlight== text. Used to highlight text.","title":"Mark"},{"location":"example-markdown/#tasklist","text":"Tasklist Example * [ x ] Lorem ipsum dolor sit amet , consectetur adipiscing elit * [ ] Vestibulum convallis sit amet nisi a tincidunt * [ x ] Sed egestas felis quis elit dapibus , ac aliquet turpis mattis * [ ] Praesent sed risus massa * [ ] Nulla vel eros venenatis , imperdiet enim id , faucibus nisi Lorem ipsum dolor sit amet, consectetur adipiscing elit Vestibulum convallis sit amet nisi a tincidunt Sed egestas felis quis elit dapibus, ac aliquet turpis mattis Praesent sed risus massa Nulla vel eros venenatis, imperdiet enim id, faucibus nisi","title":"Tasklist"},{"location":"example-markdown/#progressbar","text":"Progress Bar Example [=0% \"0%\"] [=5% \"5%\"] [=25% \"25%\"] [=45% \"45%\"] [=65% \"65%\"] [=85% \"85%\"] [=100% \"100%\"] 0% 5% 25% 45% 65% 85% 100%","title":"ProgressBar"},{"location":"example-markdown/#font-awesome","text":"http://bwmarrin.github.io/MkDocsPlus/fontawesome/ https://astronautweb.co/snippet/font-awesome/ fa-lg fa-2x fa-3x fa-4x fa-5x","title":"Font Awesome"},{"location":"node/node-hardware/","text":"Node Hardware","title":"Hardware"},{"location":"node/node-hardware/#node-hardware","text":"","title":"Node Hardware"},{"location":"node/node-requirement-specs/","text":"Node Requirement and Specifications The concept of a node is defined as a simple \"smart\" environemental sensor. The end goal is to have an autonomous sensor that can be used in hard environement (e.g. high montain). The node is connected to the server via a network (ethernet, bluetooth, LoRa..) to transmit its measurements. In case of total or transcient absence of network connectivity, the measurements are logged onboard the node for later retransmition or manual recovery. It can be either power autonomous (portable / remote area) or power dependant (places were power can be provided). To guaranty a wide spread deployement, the node shall be as cheap as possible, while maintaining a somewhat reliable system (no janky HW recup). Measurement types The concept is to have a basic node that provide base measurements and a large panel of aditional measurements types to fit most user needs. Base node The base node shall measure the folowing environemental parameters: Air temperature in Kelvin (K) Air pressure in Pascal (Pa) Relative humidity in % Air node wind speed wind direction Particulate mater concentration in air PM2.5 (2.5 um and smaller) PM10 (10 um and smaller) Total volatile organic compound (Tvoc) equivalent CO2 (eCO2) Ozone (O3) nitrogen dioxide (NO2) Caron monoxide (CO) Radon cosmic muons ? (just for fun) Ground node Ground temperature Ground humidity All measurements shall be timestamped (localy with GPS time standard).","title":"Requirements and spec"},{"location":"node/node-requirement-specs/#node-requirement-and-specifications","text":"The concept of a node is defined as a simple \"smart\" environemental sensor. The end goal is to have an autonomous sensor that can be used in hard environement (e.g. high montain). The node is connected to the server via a network (ethernet, bluetooth, LoRa..) to transmit its measurements. In case of total or transcient absence of network connectivity, the measurements are logged onboard the node for later retransmition or manual recovery. It can be either power autonomous (portable / remote area) or power dependant (places were power can be provided). To guaranty a wide spread deployement, the node shall be as cheap as possible, while maintaining a somewhat reliable system (no janky HW recup).","title":"Node Requirement and Specifications"},{"location":"node/node-requirement-specs/#measurement-types","text":"The concept is to have a basic node that provide base measurements and a large panel of aditional measurements types to fit most user needs.","title":"Measurement types"},{"location":"node/node-requirement-specs/#base-node","text":"The base node shall measure the folowing environemental parameters: Air temperature in Kelvin (K) Air pressure in Pascal (Pa) Relative humidity in %","title":"Base node"},{"location":"node/node-requirement-specs/#air-node","text":"wind speed wind direction Particulate mater concentration in air PM2.5 (2.5 um and smaller) PM10 (10 um and smaller) Total volatile organic compound (Tvoc) equivalent CO2 (eCO2) Ozone (O3) nitrogen dioxide (NO2) Caron monoxide (CO) Radon cosmic muons ? (just for fun)","title":"Air node"},{"location":"node/node-requirement-specs/#ground-node","text":"Ground temperature Ground humidity All measurements shall be timestamped (localy with GPS time standard).","title":"Ground node"},{"location":"node/node-software/","text":"Node Software","title":"software"},{"location":"node/node-software/#node-software","text":"","title":"Node Software"},{"location":"server/server-hardware/","text":"Server Requirement and Specifications","title":"Hardware"},{"location":"server/server-hardware/#server-requirement-and-specifications","text":"","title":"Server Requirement and Specifications"},{"location":"server/server-requirement-specs/","text":"Server Requirement and Specifications","title":"Requirements and spec"},{"location":"server/server-requirement-specs/#server-requirement-and-specifications","text":"","title":"Server Requirement and Specifications"},{"location":"server/udp-server/","text":"UDP Server","title":"UDP server"},{"location":"server/udp-server/#udp-server","text":"","title":"UDP Server"},{"location":"server/web-server/","text":"Web server","title":"Web server"},{"location":"server/web-server/#web-server","text":"","title":"Web server"}]}